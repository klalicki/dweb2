---
import { getCollection } from "astro:content";

const { slug } = Astro.params;
export async function getStaticPaths() {
  const slides = await getCollection("slides");
  return slides.map((slide) => {
    return { params: { slug: slide.id.split("/")[0] } };
  });
}

const pageData = await getCollection("slides");
const globbedFiles = import.meta.glob(`/src/content/classes/*/slides.md`, {
  eager: true,
  query: "?raw",
})[`/src/content/classes/${slug}/slides.md`];

const content = globbedFiles.default;
// console.log(content);

const targetData = pageData.find((slide) => {
  // console.log(slide);
  return slide.id.split("/")[0] == slug;
});

const mdData = targetData?.body;
---

<!-- {JSON.stringify(marpKeys)} -->
<div class="reveal">
  <div class="slides">
    <section data-markdown>
      <textarea data-template set:html={content} />
    </section>
  </div>
</div>
<script>
  import Reveal from "reveal.js";
  import Markdown from "reveal.js/plugin/markdown/markdown.esm.js";
  let deck = new Reveal({
    plugins: [Markdown],
  });
  deck.initialize();
</script>
<link rel="stylesheet" href="/node_modules/reveal.js/dist/reveal.css" />
<link rel="stylesheet" href="/node_modules/reveal.js/dist/theme/black.css" />
<style>
  textarea {
    display: none;
  }
</style>
