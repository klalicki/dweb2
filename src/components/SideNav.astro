---
import { getCollection } from "astro:content";

const lessons = await getCollection("lessons");
const projects = await getCollection("projects");
const resources = await getCollection("resources");
---

<nav class:list={["menu-main", "menu-switchable"]}>
  <button
    id="menu-toggle"
    class="btn"
    aria-controls="menu-main-group"
    aria-expanded="false"><span class="menu-toggle-text">Menu</span></button
  >
  <div class="menu-main-group menu-mobile-hidden">
    <a href="/">Home</a>
    <a href="/homework">Homework</a>
    <h2>Classes</h2>
    {
      lessons.map((classItem) => (
        <a href={`/classes/${classItem.id}/lesson`}>{classItem.data.title}</a>
      ))
    }
    <h2>Projects</h2>
    {
      projects.map((projectItem) => (
        <a href={`/projects/${projectItem.id}`}>{projectItem.data.title}</a>
      ))
    }
    <h2>Resources</h2>

    {
      resources.map((resource) => (
        <a href={`/resources/${resource.id}`}>{resource.data.title}</a>
      ))
    }
  </div>
</nav>

<style>
  nav {
    display: flex;
    flex-direction: column;
    text-align: center;
  }
  a {
    padding: 0.5rem;
  }

  .menu-main-group {
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    height: 100%;
    overflow-y: auto;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0rem;

    overflow-y: auto;
    z-index: 10;
    transform: none;
    transition: all 0.3s;
    backdrop-filter: blur(20px);
  }

  #menu-toggle[aria-expanded="false"] + .menu-main-group {
    display: none;
  }
  #menu-toggle[aria-expanded="true"] + .menu-main-group,
  #menu-toggle + .menu-main-group:focus-within {
    display: flex;
  }
  h2 {
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  #menu-toggle {
    position: fixed;
    top: 0.5rem;
    right: 0.5rem;
    z-index: 50;
  }

  @media screen and (min-width: 768px) {
    nav {
      position: fixed;
      left: 0;
      top: 0;
      height: 100vh;
      overflow-y: auto;
      width: var(--size-sidenav-width);
      padding: 1rem;
      border-right: 1px solid var(--color-secondary);
    }

    #menu-toggle[aria-expanded] + .menu-main-group {
      display: flex;
      position: static;
    }
    #menu-toggle,
    #menu-close {
      display: none;
    }
  }
</style>

<script type="text/javascript">
  const isDesktop = () => window.matchMedia("(min-width: 768px)").matches;

  const hideMobileMenu = () => {
    document
      .querySelector("#menu-toggle")
      ?.setAttribute("aria-expanded", "false");
  };

  document.querySelector("#menu-toggle")?.addEventListener("click", () => {
    const menuToggle = document.querySelector("#menu-toggle");
    const isExpanded = menuToggle?.getAttribute("aria-expanded") === "true";
    menuToggle?.setAttribute("aria-expanded", String(!isExpanded));
  });

  window.addEventListener("keyup", (e) => {
    if (e.key === "Escape") {
      hideMobileMenu();
      document.querySelector("#menu-toggle")?.focus();
    }
  });

  const desktopQuery = window.matchMedia("(min-width: 768px)");
  desktopQuery.addEventListener("change", (e) => {
    hideMobileMenu();
  });

  // Hide the mobile menu when focus moves outside of it
  document
    .querySelector(".menu-main-group")
    ?.addEventListener("focusout", (e) => {
      const menu = e.currentTarget;
      if (!menu.contains(e.relatedTarget)) {
        hideMobileMenu();
      }
    });
</script>
